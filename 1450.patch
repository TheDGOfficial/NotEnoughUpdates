From 601833d873fbff8279cde4bee011091cdec2cfbf Mon Sep 17 00:00:00 2001
From: Madeleaan <tomengmaster@email.cz>
Date: Tue, 17 Jun 2025 10:51:23 +0200
Subject: [PATCH] Improve performance when hovering over items

---
 .../inventory/MuseumTooltipManager.kt         | 26 +++++++++++++------
 1 file changed, 18 insertions(+), 8 deletions(-)

diff --git a/src/main/kotlin/io/github/moulberry/notenoughupdates/miscfeatures/inventory/MuseumTooltipManager.kt b/src/main/kotlin/io/github/moulberry/notenoughupdates/miscfeatures/inventory/MuseumTooltipManager.kt
index ca80cd5e0..bc87623bd 100644
--- a/src/main/kotlin/io/github/moulberry/notenoughupdates/miscfeatures/inventory/MuseumTooltipManager.kt
+++ b/src/main/kotlin/io/github/moulberry/notenoughupdates/miscfeatures/inventory/MuseumTooltipManager.kt
@@ -20,7 +20,6 @@
 package io.github.moulberry.notenoughupdates.miscfeatures.inventory
 
 import com.google.gson.Gson
-import com.google.gson.JsonPrimitive
 import io.github.moulberry.notenoughupdates.NotEnoughUpdates
 import io.github.moulberry.notenoughupdates.autosubscribe.NEUAutoSubscribe
 import io.github.moulberry.notenoughupdates.events.GuiContainerBackgroundDrawnEvent
@@ -81,6 +80,9 @@ object MuseumTooltipManager {
         MuseumUtil.DonationState.DONATED_PRESENT_PARTIAL
     )
 
+    private val itemsCache: MutableSet<String> = mutableSetOf()
+    private var helmetToSetCache: Map<String, String> = mapOf()
+
     private fun addItemToDonatedList(itemsToAdd: List<String>) {
         val profile = SBInfo.getInstance().currentProfile ?: return
 
@@ -108,17 +110,25 @@ object MuseumTooltipManager {
 
     fun canItemBeDonated(id: String): Boolean {
         val museum = Constants.MUSEUM ?: return false
-        val normalItems = museum.get("weapons")?.asJsonArray ?: return false
-        val rarities = museum.get("rarities")?.asJsonArray ?: return false
-        normalItems.addAll(rarities)
-        if (normalItems.contains(JsonPrimitive(id))) {
+        if (itemsCache.isEmpty()) {
+            val normalItems = museum.get("weapons")?.asJsonArray ?: return false
+            val rarities = museum.get("rarities")?.asJsonArray ?: return false
+
+            normalItems.forEach { itemsCache.add(it.asString) }
+            rarities.forEach { itemsCache.add(it.asString) }
+        }
+
+        if (itemsCache.contains(id)) {
             return true
         }
 
-        val helmetToSetID = Constants.MUSEUM?.get("armor_to_id")?.asJsonObject?.entrySet()
-            ?.associateBy({ it.value.asString }, { it.key }) ?: return false
+        if (helmetToSetCache.isEmpty()) {
+            val helmetToSetID = Constants.MUSEUM?.get("armor_to_id")?.asJsonObject?.entrySet()
+                ?.associateBy({ it.value.asString }, { it.key }) ?: return false
+            helmetToSetCache = helmetToSetID.toMutableMap()
+        }
 
-        return helmetToSetID.containsKey(id)
+        return helmetToSetCache.containsKey(id)
     }
 
     /***
